<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blogsxxx.dao.ArticleDao">
	<resultMap id="BaseResultMap" type="com.blogsxxx.model.Article">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="pics" property="pics" jdbcType="VARCHAR" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="lastmodifier" property="lastmodifier" jdbcType="VARCHAR" />
		<result column="lastmodifytime" property="lastmodifytime"
			jdbcType="TIMESTAMP" />
		<result column="xxxpics" property="xxxpics" jdbcType="VARCHAR" />
		<result column="xxxrealpathpics" property="xxxrealpathpics"
			jdbcType="VARCHAR" />
		<result column="fromurl" property="fromurl" jdbcType="VARCHAR" />
		<result column="categoryname" property="categoryname" jdbcType="VARCHAR" />
		<result column="categoryid" property="categoryid" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.blogsxxx.model.Article"
		extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, title, pics, creater, createtime, lastmodifier,
		lastmodifytime,xxxpics,xxxrealpathpics,fromurl,categoryname,categoryid
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>

	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tb_article
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tb_article
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.blogsxxx.model.Article">
		insert into tb_article (
		title, pics,
		creater, createtime, lastmodifier,
		lastmodifytime, content,xxxpics,xxxrealpathpics,
		fromurl,categoryname,categoryid)
		values
		(#{title,jdbcType=VARCHAR},
		#{pics,jdbcType=VARCHAR},
		#{creater,jdbcType=VARCHAR},
		#{createtime,jdbcType=TIMESTAMP},
		#{lastmodifier,jdbcType=VARCHAR},
		#{lastmodifytime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR},
		#{xxxpics,jdbcType=VARCHAR},
		#{xxxrealpathpics,jdbcType=VARCHAR},
		#{fromurl,jdbcType=VARCHAR},
		#{categoryname,jdbcType=VARCHAR},
		#{categoryid,jdbcType=INTEGER}
		)
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select
			LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertSelective" parameterType="com.blogsxxx.model.Article">
		insert into tb_article
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="title != null">
				title,
			</if>
			<if test="pics != null">
				pics,
			</if>
			<if test="creater != null">
				creater,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="lastmodifier != null">
				lastmodifier,
			</if>
			<if test="lastmodifytime != null">
				lastmodifytime,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="xxxpics != null">
				xxxpics,
			</if>
			<if test="xxxrealpathpics != null">
				xxxrealpathpics,
			</if>
			<if test="fromurl != null">
				fromurl,
			</if>
			<if test="categoryname != null">
				categoryname,
			</if>
			<if test="categoryid != null">
				categoryid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="pics != null">
				#{pics,jdbcType=VARCHAR},
			</if>
			<if test="creater != null">
				#{creater,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastmodifier != null">
				#{lastmodifier,jdbcType=VARCHAR},
			</if>
			<if test="lastmodifytime != null">
				#{lastmodifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="xxxpics != null">
				#{xxxpics,jdbcType=VARCHAR},
			</if>
			<if test="xxxrealpathpics != null">
				#{xxxrealpathpics,jdbcType=VARCHAR},
			</if>
			<if test="fromurl != null">
				#{fromurl,jdbcType=VARCHAR},
			</if>
			<if test="categoryname != null">
				#{categoryname,jdbcType=VARCHAR},
			</if>
			<if test="categoryid != null">
				#{categoryid,jdbcType=INTEGER},
			</if>
		</trim>
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select
			LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.blogsxxx.model.Article">
		update tb_article
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="pics != null">
				pics = #{pics,jdbcType=VARCHAR},
			</if>
			<if test="creater != null">
				creater = #{creater,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastmodifier != null">
				lastmodifier = #{lastmodifier,jdbcType=VARCHAR},
			</if>
			<if test="lastmodifytime != null">
				lastmodifytime = #{lastmodifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="xxxpics != null">
				xxxpics=#{xxxpics,jdbcType=VARCHAR},
			</if>
			<if test="xxxrealpathpics != null">
				xxxrealpathpics=#{xxxrealpathpics,jdbcType=VARCHAR},
			</if>
			<if test="fromurl != null">
				fromurl=#{fromurl,jdbcType=VARCHAR},
			</if>
			<if test="categoryname != null">
				categoryname=#{categoryname,jdbcType=VARCHAR},
			</if>
			<if test="categoryid != null">
				categoryid=#{categoryid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blogsxxx.model.Article">
		update
		tb_article
		set title = #{title,jdbcType=VARCHAR},
		pics =
		#{pics,jdbcType=VARCHAR},
		creater = #{creater,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		lastmodifier =
		#{lastmodifier,jdbcType=VARCHAR},
		lastmodifytime =
		#{lastmodifytime,jdbcType=TIMESTAMP},
		content =
		#{content,jdbcType=LONGVARCHAR},
		xxxpics=#{xxxpics,jdbcType=VARCHAR},
		xxxrealpathpics=#{xxxrealpathpics,jdbcType=VARCHAR},
		fromurl=#{fromurl,jdbcType=VARCHAR},
		categoryname=#{categoryname,jdbcType=VARCHAR},
		categoryid=#{categoryid,jdbcType=INTEGER}

		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.blogsxxx.model.Article">
		update tb_article
		set title = #{title,jdbcType=VARCHAR},
		pics = #{pics,jdbcType=VARCHAR},
		creater = #{creater,jdbcType=VARCHAR},
		createtime =
		#{createtime,jdbcType=TIMESTAMP},
		lastmodifier =
		#{lastmodifier,jdbcType=VARCHAR},
		lastmodifytime =
		#{lastmodifytime,jdbcType=TIMESTAMP},
		xxxpics=#{xxxpics,jdbcType=VARCHAR},
		xxxrealpathpics=#{xxxrealpathpics,jdbcType=VARCHAR},
		fromurl=#{fromurl,jdbcType=VARCHAR},
		categoryname=#{categoryname,jdbcType=VARCHAR},
		categoryid=#{categoryid,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<!-- 根据时间排序取出最近的两篇文章 -->
	<select id="findArticlesByRecent" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tb_article t order by t.createtime desc limit 0,2
	</select>

	<!-- 根据ID查找上一篇文章 -->
	<select id="findPreArticleById" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tb_article t where t.id &lt; #{min} limit 0,1
	</select>
	<!-- 根据ID查找下一篇文章 -->
	<select id="findNextArticleById" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tb_article t where t.id &gt; #{max} limit 0,1
	</select>

	<!-- 根据标题查找文章 -->
	<select id="findArticleByTitle" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tb_article t where t.title=#{title}
	</select>


	<!-- 全部的 findAllArticle -->
	<select id="findAllArticle" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from tb_article t
	</select>

	<!--根据文章表，生成对应的时间线记录 createTimeLineByArticle -->
	<select id="createTimeLineByArticle" resultType="java.util.HashMap">
		select
		date_format(a.createtime,'%Y%m')
		as createtime,count(*) as count
		from
		tb_article a group by
		date_format(a.createtime,'%Y%m')
		order by
		date_format(a.createtime,'%Y%m')
	</select>


	<!--根据文章表，生成对应的类别记录 createCategoryByArticle -->
	<select id="createCategoryByArticle" resultType="java.util.HashMap">
		select
		a.categoryname, a.categoryid
		,count(*) as count from tb_article a
		group
		by a.categoryid order by a.categoryid
	</select>


	<!-- 全部的 findArticleByTimeLineId -->
	<select id="findArticleByTimeLineId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />

		from tb_article t where date_format(t.createtime,'%Y%m')=
		(select
		tl.timestr from tb_timeline tl where tl.id=#{id,jdbcType=INTEGER})
		order by t.createtime desc
	</select>


	<!-- 全部的 findArticleByCategoryId -->
	<select id="findArticleByCategoryId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />

		from tb_article t where t.categoryid=#{id,jdbcType=INTEGER}
		order by t.createtime desc 
	</select>
</mapper>