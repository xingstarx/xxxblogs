<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd    
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd    
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
 		   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
      	   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.blogsxxx">
	</context:component-scan>
	<mvc:annotation-driven />  <!-- spring新版本的mvc注解 -->
	<mvc:default-servlet-handler />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 配置数据源 172.16.4.121 172.16.5.29 127.0.0.1 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/xxxblogs" />
		<property name="username" value="root" />
		<property name="password" value="" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="10" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="40" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="5" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="10000" />
		<!-- #SQL查询,用来验证从连接池取出的连接 -->
		<property name="validationQuery" value="SELECT 1" />
		<!-- #指明连接是否被空闲连接回收器(如果有)进行检验，如果检测失败，则连接将被从池中去除 -->
		<property name="testWhileIdle" value="true" />
	</bean>
	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:com/blogsxxx/dao/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="upload*" propagation="REQUIRED" />
			<tx:method name="submit*" propagation="REQUIRED" />
			<tx:method name="saveOrUpdate*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="compareAndUpdate*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
			<tx:method name="*" timeout="50" />
		</tx:attributes>
	</tx:advice>
	<!-- aop -->
	<aop:config>
		<aop:pointcut id="target"
			expression="execution(* com.blogsxxx.service.*.impl.*Impl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="target" />
	</aop:config>


	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.blogsxxx.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<!-- 支持上传文件 -->
	<bean id="multipartResolver" class="com.blogsxxx.util.URLMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="20097152" /><!-- 上限2M -104857600 -->
		<property name="maxInMemorySize" value="4096" />
		<property name="excludeUrls">
			<list>
				<value>/Certificates/uploadCertificates</value>
				<value>/Certificates/uploadOtherPicture</value>
				<value>/areaManagerSubmit/upload</value>
			</list>
		</property>
	</bean>
	<!-- 对模型视图名称的解析，添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

	<!-- 同步任务 -->
	<!-- <bean name="csdnArticleServiceImpl" class="com.blogsxxx.service.timer.impl.CsdnArticleServiceImpl"/> 
		<task:scheduler id="scheduler" pool-size="10"/> <task:scheduled-tasks scheduler="scheduler"> 
		<task:scheduled ref="csdnArticleServiceImpl" method="initCsdnCategory" cron="0 
		47 16 * * ?"/> <task:scheduled ref="csdnArticleServiceImpl" method="initCsdnArticleAll" 
		cron="0 25 19 * * ?"/> <task:scheduled ref="csdnArticleServiceImpl" method="cpCsdnArticleToXXXBlogs" 
		cron="0 29 21 * * ?"/> <task:scheduled ref="csdnArticleServiceImpl" method="synchronCSDNBlogsAndCreateTable" 
		cron="0 29 21 * * ?"/> </task:scheduled-tasks> -->
</beans>        